{
  "name": "node-pushnotifications",
  "description": "A cross-platform push service for Node.js",
  "version": "0.1.8",
  "author": {
    "name": "AppFeel",
    "email": "info@appfeel.com"
  },
  "keywords": [
    "apple",
    "google",
    "microsoft",
    "amazon",
    "ios",
    "android",
    "wphone",
    "apns",
    "gcm",
    "mpns",
    "adm",
    "notifications",
    "push",
    "push notifications"
  ],
  "main": "index.js",
  "bugs": {
    "url": "https://github.com/appfeel/node-pushnotifications",
    "email": "info@appfeel.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/appfeel/node-pushnotifications.git"
  },
  "dependencies": {
    "apn": "1.7.8",
    "node-gcm": "*",
    "mpns": "*",
    "node-parallel": "*",
    "node-adm": "*",
    "lodash": "*"
  },
  "engines": {
    "node": "*"
  },
  "readmeFilename": "README.md",
  "homepage": "https://github.com/appfeel/node-pushnotifications",
  "readme": "Node Push Notify\n========\n\nA Node.js module for interfacing with Apple Push Notification, Google Cloud Messaging, Microsoft Push Notification and Amazon Device Messaging services.\n\n[![License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](https://npmjs.org/package/node-pushnotifications)\n[![NPM version](http://img.shields.io/npm/v/node-pushnotifications.svg?style=flat)](https://npmjs.org/package/node-pushnotifications)\n[![Downloads](http://img.shields.io/npm/dm/node-pushnotifications.svg?style=flat)](https://npmjs.org/package/node-pushnotifications)\n[![Build Status](http://img.shields.io/travis/appfeel/node-pushnotifications.svg?style=flat)](https://travis-ci.org/appfeel/node-pushnotifications)\n\n## Installation \n```\nnpm install node-pushnotifications\n```\n\n#Features\n\n- Powerful and intuitive.\n- Multi platform push sends.\n- Automatically detects destination device type.\n- Unified error handling.\n\n## Usage \n\n*iOS:* Prepare cert.pem and key.pem as described in [node-apn](https://github.com/argon/node-apn/wiki/Preparing-Certificates)\n\nImport and setup push module:\n```js\nvar settings = {\n  gcm: {\n    id: null, // PUT YOUR GCM SERVER API KEY,\n    msgcnt: 1,\n    dataDefaults: {\n      delayWhileIdle: false,\n      timeToLive: 4 * 7 * 24 * 3600, // 4 weeks\n      retries: 4,\n    },\n    // Custom GCM request options https://github.com/ToothlessGear/node-gcm#custom-gcm-request-options\n    options: {},\n  },\n  apn: {\n    gateway: 'gateway.sandbox.push.apple.com',\n    badge: 1,\n    defaultData: {\n      expiry: 4 * 7 * 24 * 3600, // 4 weeks\n      sound: 'ping.aiff'\n    },\n    // See all available options at https://github.com/argon/node-apn/blob/master/doc/connection.markdown\n    options: {},\n    // I.e., change .cert location file:\n    // options: {\n    //    cert: \"/certs/ios/mycert.cert\" // {Buffer|String} The filename of the connection certificate to load from disk, or a Buffer/String containing the certificate data. (Defaults to: cert.pem)\n    // }\n  },\n  adm: {\n    client_id: null, // PUT YOUR ADM CLIENT ID,\n    client_secret: null, // PUT YOUR ADM CLIENT SECRET,\n    expiresAfter: 4 * 7 * 24 * 3600, // 4 weeks\n    // Custom ADM request options, same as https://github.com/ToothlessGear/node-gcm#custom-gcm-request-options\n    options: {},\n  },\n};\nvar PushNotifications = new require('node-pushnotifications');\nvar push = new PushNotifications(settings);\n```\n\nGCM and ADM options: see [node-gcm](https://github.com/ToothlessGear/node-gcm#custom-gcm-request-options)\n\nAPN options: see [node-apn](https://github.com/argon/node-apn/blob/master/doc/connection.markdown)\n\n\nDefine destination device ID. You can send to multiple devices, independently of platform, creating an array with different destination device IDs.\n```js\n// Single destination\nvar deviceIds = 'INSERT_YOUR_DEVICE_ID';\n\n// Multiple destinations\nvar deviceIds = [];\ndeviceIds.push('INSERT_YOUR_DEVICE_ID');\ndeviceIds.push('INSERT_OTHER_DEVICE_ID');\n```\n\nNext, create a JSON object witch MUST contain, at least, a title and message and send it to server. \n```js\nvar data = {\n  title: 'New push notification',\n  message: 'Powered by AppFeel',\n  otherfields: 'optionally add more data'\n};\npush.send(deviceIds, data, function (result) {\n\tconsole.log(result);\n});\n```\nResult will contain 'true' or 'an error description'.\n\n\n##Resources\n\n- [Node Push Notify from alexlds](https://github.com/alexlds/node-push-notify)\n- [Google Cloud Messaging setup guide](http://aerogear.org/docs/guides/aerogear-push-android/google-setup/)\n- [Apple Push Notification setup guide Part 1](http://aerogear.org/docs/guides/aerogear-push-ios/app-id-ssl-certificate-apns/)\n- [Apple Push Notification setup guide Part 2](https://github.com/argon/node-apn/wiki/Preparing-Certificates)\n\n*<p style=\"font-size: small;\" align=\"right\"><a color=\"#232323;\" href=\"http://appfeel.com\">Made in Barcelona with <span color=\"#FCB\"><3</span> and <span color=\"#BBCCFF\">Code</span></a></p>*\n",
  "_id": "node-pushnotifications@0.1.8",
  "dist": {
    "shasum": "dd6cc852ec7342ad1839d4f3c229c73cedd5bd43"
  },
  "_from": "node-pushnotifications@",
  "_resolved": "https://registry.npmjs.org/node-pushnotifications/-/node-pushnotifications-0.1.8.tgz"
}
